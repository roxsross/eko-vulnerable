name: eko-pipeline-security-tab

on:
  push:
    branches:
      - master

jobs:
  init:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install

  secrets:
    name: Secrets Security Scan
    runs-on: ubuntu-latest
    needs: [init]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Scan with Gitleaks
        run: |
          docker run --rm \
            -v "$(pwd):/pwd" \
            zricethezav/gitleaks:latest \
            detect \
            --verbose \
            --source="/pwd" \
            --report-format=json \
            --report-path=/pwd/gitleaks-result.json \
            --log-level=debug \
            --config=/pwd/.gitleaks.toml
        continue-on-error: true
      - name : Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-json-reports
          path: gitleaks-result.json
  sca:
    runs-on: ubuntu-latest
    name: Sca Security Scan
    needs: [init]
    steps:
      - name: Checkout action
        uses: actions/checkout@v4     
      - name: Snyk SCA Analysis
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json-file-output=snyk-results.json
        continue-on-error: true
      - name: Upload Snyk results
        uses: actions/upload-artifact@v4
        with:
          name: snyk-json-reports
          path: snyk-results.json

  sast:
    runs-on: ubuntu-latest
    name: Sast Security Scan
    container:
      image: returntocorp/semgrep
    needs: [init]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: full scan
        run: |
          semgrep \
          --json --output report.json \
          --metrics=off \
          --config="p/javascript"
      - name: Upload Semgrep results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-json-results
          path: report.json

  container-scan:
    runs-on: ubuntu-latest
    name: Container Security Scan
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t app-image:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
        with:
          image-ref: 'app-image:${{ github.sha }}'
          format: 'json'
          output: 'trivy-results.json'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-json-results
          path: trivy-results.json